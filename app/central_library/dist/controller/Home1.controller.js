sap.ui.define(["./Basecontroller","sap/ui/core/Fragment","sap/ui/model/json/JSONModel","sap/m/MessageBox","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/ui/model/odata/v2/ODataModel"],function(e,t,s,r,i,o,n){"use strict";return e.extend("com.app.centrallibrary.controller.Home1",{onInit:function(){var e=new n("/v2/CentralLibrary/");this.getView().setModel(e);const t=new s({Username:"",phone_no:"",email:"",password:""});this.getView().setModel(t,"localModel")},loadFragment:async function(e){const s=await t.load({id:this.getView().getId(),name:`com.app.centrallibrary.fragments.${e}`,controller:this});this.getView().addDependent(s);return s},loginbutton:async function(){if(!this.ologin){this.ologin=await this.loadFragment("login")}this.ologin.open()},onCloseDialog:function(){if(this.ologin.isOpen()){this.ologin.close()}},onLogin:function(){var e=this.getView().byId("idLogin").getValue();var t=this.getView().byId("idPassword").getValue();if(e==="admin"&&t==="admin"){const e=this.getOwnerComponent().getRouter();debugger;e.navTo("RouteAdmin");r.success("Login Successfull")}else{r.error("Re-Enter your Details")}},userloginbutton:async function(){if(!this.oUser){this.oUser=await this.loadFragment("User")}this.oUser.open()},onCloseuser:function(){if(this.oUser.isOpen()){this.oUser.close()}},onLoginuser:function(){debugger;var e=this.getView();var t=e.byId("iduserinput").getValue();var s=e.byId("idpasswordinput").getValue();if(!t||!s){r.error("please enter username and password.");return}var n=this.getView().getModel();n.read("/User",{filters:[new i("Username",o.EQ,t),new i("password",o.EQ,s)],success:function(e){if(e.results.length>0){var t=e.results[0].ID;var s=this.getOwnerComponent().getRouter();s.navTo("RouteUser",{ID:t});r.success("Login Successful")}else{r.error("Invalid username or password.")}}.bind(this),error:function(){r.error("An error occured during login.")}})},ongoregister:async function(){if(!this.oRegister){this.oRegister=await t.load({id:this.getView().getId(),name:"com.app.centrallibrary.fragments.Register",controller:this});this.getView().addDependent(this.oRegister)}this.oRegister.open()},cancleregister:function(){var e=this.getView();var t=e.byId("registrationDialog");if(t){t.close()}else{console.error("Dialog is not available.")}},handleRegisterPress:async function(){debugger;const e=this.getView().getModel("localModel").getProperty("/"),t=e.Username,s=this.getView().getModel("ModelV2");try{const i=await this.checkUsernameExists(s,t);if(i){r.error("Username already exists. Please choose a different username.");return}await this.createData(s,e,"/User");this.oRegister.close();r.success("Successfully completed your Registration")}catch(e){this.oRegister.close();r.error("Please Enter correct Details")}},checkUsernameExists:async function(e,t){return new Promise((s,r)=>{e.read("/User",{filters:[new i("Username",o.EQ,t)],success:function(e){s(e.results.length>0)},error:function(){r("An error occurred while checking username existence.")}})})}})});
//# sourceMappingURL=Home1.controller.js.map